---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Continuous Delivery pipeline for static website'
Parameters:
  GitHubOwner:
    Description: 'The owner of the GitHub repository.'
    Type: String
  GitHubOAuthToken:
    Description: 'The OAuthToken of the GitHub user.'
    Type: String
  GitHubRepo:
    Description: 'The GitHub repository.'
    Type: String
Resources:
  ArtifactStore:
    Type: "AWS::S3::Bucket"
    Properties: 
      VersioningConfiguration:
        Status: Enabled
  CodePipelineIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            - arn:aws:s3:::elasticbeanstalk*
            Effect: Allow
          - Action:
            - codecommit:CancelUploadArchive
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:GetUploadArchiveStatus
            - codecommit:UploadArchive
            Resource: "*"
            Effect: Allow
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Resource: "*"
            Effect: Allow
          - Action:
            - elasticbeanstalk:*
            - ec2:*
            - elasticloadbalancing:*
            - autoscaling:*
            - cloudwatch:*
            - s3:*
            - sns:*
            - cloudformation:*
            - rds:*
            - sqs:*
            - ecs:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
            - lambda:InvokeFunction
            - lambda:ListFunctions
            Resource: "*"
            Effect: Allow
          - Action:
            - opsworks:CreateDeployment
            - opsworks:DescribeApps
            - opsworks:DescribeCommands
            - opsworks:DescribeDeployments
            - opsworks:DescribeInstances
            - opsworks:DescribeStacks
            - opsworks:UpdateApp
            - opsworks:UpdateStack
            Resource: "*"
            Effect: Allow
  
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStore
        Type: S3
      RoleArn: !Sub '${CodePipelineIAMRole.Arn}'
      Stages:
        - Name: Source
          Actions: 
          - Name: Source
            ActionTypeId:
              Category: Source 
              Owner: ThirdParty 
              Version: 1 
              Provider: GitHub
            OutputArtifacts:
            - Name: my-app-inputart
            Configuration:
              Owner: !Ref GitHubOwner
              Repo: !Ref GitHubRepo
              Branch: master
              OAuthToken: !Ref GitHubOAuthToken
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
            OutputArtifacts:
              - Name: my-app-outputart 
            InputArtifacts:
              - Name: my-app-inputart
            Configuration:
                ProjectName: !Ref CodeBuildJavaProject
            RunOrder: 1
  CodeBuildJavaProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildRole
    Properties:
      Artifacts:
        Type: no_artifacts
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
        Type: LINUX_CONTAINER
      Name: !Sub ${AWS::StackName}CodeBuildJavaProject
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODECOMMIT
        Location:
          Fn::Join:
            - ""
            - - "https://git-codecommit."
              - Ref: AWS::Region
              - ".amazonaws.com/v1/repos/"
              - Ref: AWS::StackName

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
